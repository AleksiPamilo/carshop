generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @unique @default(cuid())
  name          String    @unique
  password      String
  email         String    @unique
  emailVerified DateTime? @map("email_verified")
  phone         String?
  phoneVerified DateTime? @map("phone_verified")
  createdAt     DateTime  @default(now())
  vehicles      Vehicle[]

  @@map("users")
}

model Vehicle {
  id               Int           @id @default(autoincrement())
  brandName        String        @map("brand_name")
  brandSlug        String        @map("brand_slug")
  modelName        String        @map("model_name")
  modelSpec        String?       @map("model_spec")
  modelSlug        String        @map("model_slug")
  basicInfo        BasicInfo     @relation(fields: [basicInfo_id], references: [id])
  basicInfo_id     Int           @unique @map("basic_info_id")
  technicalInfo    TechnicalInfo @relation(fields: [technicalInfo_id], references: [id])
  technicalInfo_id Int           @unique @map("technical_info_id")
  user             User          @relation(fields: [user_id], references: [id])
  user_id          String
  listingCreatedAt DateTime      @default(now()) @map("listing_created_at")
  listingUpdatedAt DateTime?     @map("listing_updated_at")
  soldAt           DateTime?     @map("sold_at")

  @@map("vehicles")
}

model BasicInfo {
  id                Int       @id @default(autoincrement())
  year              Int
  driverSide        String    @map("driver_side")
  licensePlate      String    @map("license_plate")
  firstRegistration DateTime? @map("first_registration")
  inspectionDate    DateTime? @map("inspection_date")
  previousOwners    Int?      @map("previous_owners")
  color             String
  paintType         String    @map("paint_type")
  description       String?   @db.VarChar(1000)
  mileage           Int
  price             Float
  vehicle           Vehicle?
  features          Feature[]

  @@map("basic_info")
}

model TechnicalInfo {
  id                     Int              @id @default(autoincrement())
  fuelType               String           @map("fuel_type")
  engineSize             Float?           @map("engine_size")
  drivetrain             String
  transmission           String
  seats                  Int?             @map("seats")
  doors                  Int?             @map("doors")
  power                  Int?
  torque                 Int?
  topSpeed               Int?             @map("top_speed")
  acceleration           Float?
  co2Emission            Int?             @map("co2_emission")
  fuelCapacity           Int?             @map("fuel_capacity")
  fuelConsumption        FuelConsumption? @relation(fields: [fuelConsumptionId], references: [id])
  fuelConsumptionId      Int?             @unique
  weight                 Int?
  totalWeight            Int?             @map("total_weight")
  towWeightWithoutBrakes Int?             @map("tow_weight_without_brakes")
  towWeightWithBrakes    Int?             @map("tow_weight_with_brakes")
  vehicle                Vehicle?

  @@map("technical_info")
}

model FuelConsumption {
  id            Int            @id @default(autoincrement())
  city          Float
  highway       Float
  combined      Float
  technicalInfo TechnicalInfo?

  @@map("fuel_consumptions")
}

model Brand {
  id     Int     @id @default(autoincrement())
  name   String
  slug   String  @unique
  models Model[]

  @@map("brands")
}

model Model {
  id       Int    @id @default(autoincrement())
  name     String
  slug     String
  brand    Brand  @relation(fields: [brand_id], references: [id])
  brand_id Int

  @@map("models")
}

model Feature {
  id         Int         @id @default(autoincrement())
  key        String      @unique
  category   Category    @relation(fields: [categoryId], references: [id])
  categoryId Int
  basicInfos BasicInfo[]
}

model Category {
  id       Int       @id @default(autoincrement())
  key      String    @unique
  features Feature[]

  @@map("categories")
}
